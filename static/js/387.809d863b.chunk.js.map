{"version":3,"file":"static/js/387.809d863b.chunk.js","mappings":"gSAEaA,EAAcC,EAAAA,EAAAA,GAAH,gIAQXC,EAAcD,EAAAA,EAAAA,GAAH,mFAMXE,EAAiBF,EAAAA,EAAAA,EAAH,gD,SCVdG,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAyBR,OAvBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,iHAEFC,EAAAA,EAAAA,IAAA,6CACkBJ,EADlB,4BAC6CK,EAAAA,EAD7C,oBAFE,OAElBC,EAFkB,OAMlBC,EAAOD,EAAQC,KAAKC,QAEpBC,EAAeF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,MAA8B,CAC1DC,GAD4B,EAAoBA,GAEhDF,OAAAA,EACAC,QAAAA,EAH4B,IAK9Bb,EAAWU,GAba,gDAexBK,QAAQC,IAAR,MAfwB,yDAAH,qDAmBzBZ,GACD,GAAE,CAACH,KAGF,8BACe,OAAZF,GAAuC,IAAnBA,EAAQkB,QAC3B,SAACxB,EAAD,UACGM,EAAQY,KAAI,YAA8B,IAA3BG,EAA0B,EAA1BA,GAAIF,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAAClB,EAAD,YACE,qCAAaiB,MACb,SAAChB,EAAD,UAAiBiB,MAFDC,EAKrB,OAGH,mFAIP,C,uDCnDM,IAAMR,EAAU,kC","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","settings/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const ReviewsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ReviewsItemPrg = styled.p`\n  text-align: justify;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_KEY } from 'settings/moviesAPI';\nimport { ReviewsList, ReviewsItemPrg, ReviewsItem } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviewsById = async () => {\n      try {\n        const respons = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n        );\n\n        const data = respons.data.results;\n\n        const filteredData = data.map(({ author, content, id }) => ({\n          id,\n          author,\n          content,\n        }));\n        setReviews(filteredData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovieReviewsById();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews !== null && reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewsItem key={id}>\n                <h3>Author: {author}</h3>\n                <ReviewsItemPrg>{content}</ReviewsItemPrg>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <div>Sorry, but we don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n","export const API_KEY = '4bc6cd41da8136f9d881653d0e323d21';\n"],"names":["ReviewsList","styled","ReviewsItem","ReviewsItemPrg","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviewsById","axios","API_KEY","respons","data","results","filteredData","map","author","content","id","console","log","length"],"sourceRoot":""}