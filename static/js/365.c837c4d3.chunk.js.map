{"version":3,"file":"static/js/365.c837c4d3.chunk.js","mappings":"oUAGaA,EAAwBC,EAAAA,EAAAA,IAAH,8GAOrBC,EAAYD,EAAAA,EAAAA,IAAH,0MAUTE,EAAgCF,EAAAA,EAAAA,IAAH,0CAI7BG,EAAcH,EAAAA,EAAAA,IAAH,gFAMXI,EAAuBJ,EAAAA,EAAAA,IAAH,2IASpBK,EAAiBL,EAAAA,EAAAA,IAAH,yGAOdM,GAAiBN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,0IAWdQ,EAAkBR,EAAAA,EAAAA,IAAH,6CAIfS,GAAWT,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,2LAcRU,EAAiBV,EAAAA,EAAAA,IAAH,yQAYdW,EAAWX,EAAAA,EAAAA,EAAH,uF,SCuBrB,EA3FqB,WAAO,IAAD,IACzB,GAA0BY,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QA+BR,OA7BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,iHAEKC,EAAAA,EAAAA,IAAA,6CACkBJ,EADlB,oBACqCK,EAAAA,EADrC,oBAFL,OAEXC,EAFW,OAMXC,EAAOD,EAAQC,KAEfC,EAAW,CACfC,MAAOF,EAAKE,OAASF,EAAKG,KAC1BC,QAASJ,EAAKK,aACdC,SAAUN,EAAKM,SACfC,OAAQP,EAAKO,OAAOC,KAAI,qBAAGL,IAAH,IAAoBM,KAAK,MACjDC,OAAO,kCAAD,OAAoCV,EAAKW,aAC/CC,KAAMZ,EAAKa,aAAaC,MAAM,KAAK,IAGrC9B,EAASiB,GAjBQ,gDAmBjBf,EACE,yFApBe,yDAAH,qDAyBlBU,GACD,GAAE,CAACH,KAGF,SAACxB,EAAD,UACGc,GACC,UAACZ,EAAD,YACE,SAACQ,EAAD,CAAUoC,GAAI1B,EAAoB2B,QAAlC,mCACA,UAAC5C,EAAD,YACE,SAACC,EAAD,CAAa4C,IAAKlC,EAAM2B,OAAQQ,IAAKnC,EAAMmB,SAC3C,UAAC5B,EAAD,YACE,0BACGS,EAAMmB,MADT,KACkBnB,EAAM6B,KADxB,QAGA,wCAAgB7B,EAAMqB,YACtB,sCACA,uBAAIrB,EAAMuB,YACV,oCACA,uBAAIvB,EAAMwB,UAEV,UAAChC,EAAD,YACE,qDACA,SAACC,EAAD,CAAgBuC,GAAI,OAApB,0BACA,SAACvC,EAAD,CAAgBuC,GAAI,UAApB,gCAGF,0BACE,SAAC,EAAAI,SAAD,CAAUC,UAAU,mCAApB,UACE,SAAC,KAAD,iBAOI,OAAbnC,IACC,SAACP,EAAD,WACE,SAAC,KAAD,CACE2C,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,QAIb,UAAC/C,EAAD,YACE,SAACD,EAAD,CAAUoC,GAAI1B,EAAoB2B,QAAlC,mCACA,SAACnC,EAAD,UAAWI,QAMtB,C,uDC5GM,IAAMa,EAAU,kC","sources":["pages/MoviesDatails/MoviesDatails.styles.jsx","pages/MoviesDatails/MovieDetails.jsx","settings/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDatailsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Container = styled.div`\n  margin: 30px 60px 20px 60px;\n  box-shadow: 0px 0px 9px 5px rgba(0, 0, 0, 0.67);\n  background-color: #fdf0f7;\n  width: 100%;\n\n  min-height: 1000px;\n  position: relative;\n`;\n\nexport const ContainerForImgAndDescription = styled.div`\n  display: flex;\n`;\n\nexport const MoviesIdImg = styled.img`\n  height: 500px;\n  margin: 30px;\n  margin-top: 50px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  height: 100%;\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 700px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const AdditionalLink = styled(Link)`\n  font-size: 17px;\n  color: #212121;\n  font-weight: 500;\n\n  &:hover,\n  &.active {\n    color: #ff0068;\n  }\n`;\n\nexport const LoaderContainer = styled.div`\n  margin-top: 50px;\n`;\n\nexport const BackLink = styled(Link)`\n  padding: 15px;\n  position: absolute;\n  color: black;\n  font-size: 18px;\n  font-weight: 600;\n  top: 0;\n  left: 0;\n\n  &:hover {\n    color: #ff0068;\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 30px 60px 20px 60px;\n  box-shadow: 0px 0px 9px 5px rgba(0, 0, 0, 0.67);\n  background-color: #fdf0f7;\n  height: 200px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const ErrorPrg = styled.p`\nfont-size: 22px;\n    font-weight: 600;\n    color: #212121;\n}`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\nimport axios from 'axios';\nimport { API_KEY } from 'settings/moviesAPI';\nimport {\n  Container,\n  MoviesIdImg,\n  AdditionalInfo,\n  DescriptionContainer,\n  AdditionalLink,\n  MovieDatailsContainer,\n  LoaderContainer,\n  ContainerForImgAndDescription,\n  BackLink,\n  ErrorContainer,\n  ErrorPrg,\n} from './MoviesDatails.styles';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [errorMas, setErrorMas] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      try {\n        const respons = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n        );\n\n        const data = respons.data;\n\n        const movieObj = {\n          title: data.title || data.name,\n          average: data.vote_average,\n          overview: data.overview,\n          genres: data.genres.map(({ name }) => name).join(', '),\n          poster: `https://image.tmdb.org/t/p/w500${data.poster_path}`,\n          date: data.release_date.split('-')[0],\n        };\n\n        setMovie(movieObj);\n      } catch (error) {\n        setErrorMas(\n          'Sorry, but there is no detailed information about this movie, choose another movie =('\n        );\n      }\n    };\n\n    getMovieById();\n  }, [movieId]);\n\n  return (\n    <MovieDatailsContainer>\n      {movie ? (\n        <Container>\n          <BackLink to={backLinkLocationRef.current}>ðŸ ” Go back</BackLink>\n          <ContainerForImgAndDescription>\n            <MoviesIdImg src={movie.poster} alt={movie.title} />\n            <DescriptionContainer>\n              <h2>\n                {movie.title} ({movie.date})\n              </h2>\n              <p>User score: {movie.average}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{movie.genres}</p>\n\n              <AdditionalInfo>\n                <h3>Additional information:</h3>\n                <AdditionalLink to={'cast'}>Cast â‡“</AdditionalLink>\n                <AdditionalLink to={'reviews'}>Reviews â‡“</AdditionalLink>\n              </AdditionalInfo>\n\n              <div>\n                <Suspense fallback={<p>loading</p>}>\n                  <Outlet />\n                </Suspense>\n              </div>\n            </DescriptionContainer>\n          </ContainerForImgAndDescription>\n        </Container>\n      ) : (\n        (errorMas === null && (\n          <LoaderContainer>\n            <Circles\n              height=\"80\"\n              width=\"80\"\n              color=\"#ff0068\"\n              ariaLabel=\"circles-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n            />\n          </LoaderContainer>\n        )) || (\n          <ErrorContainer>\n            <BackLink to={backLinkLocationRef.current}>ðŸ ” Go back</BackLink>\n            <ErrorPrg>{errorMas}</ErrorPrg>\n          </ErrorContainer>\n        )\n      )}\n    </MovieDatailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","export const API_KEY = '4bc6cd41da8136f9d881653d0e323d21';\n"],"names":["MovieDatailsContainer","styled","Container","ContainerForImgAndDescription","MoviesIdImg","DescriptionContainer","AdditionalInfo","AdditionalLink","Link","LoaderContainer","BackLink","ErrorContainer","ErrorPrg","useState","movie","setMovie","errorMas","setErrorMas","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","getMovieById","axios","API_KEY","respons","data","movieObj","title","name","average","vote_average","overview","genres","map","join","poster","poster_path","date","release_date","split","to","current","src","alt","Suspense","fallback","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}